<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Posts on peakbook&#39;s weblog </title>
      <generator uri="https://hugo.spf13.com">Hugo</generator>
    <link>http://peakbook.github.io/post/index.xml/</link>
    
    <author>peakbook</author>
    <copyright>Copyleft (ɔ) peakbook All rights reversed.</copyright>
    <updated>Fri, 15 Jan 2016 14:44:25 JST</updated>
    
    <item>
      <title>Regularization</title>
      <link>http://peakbook.github.io/post/20160114_Regularization/</link>
      <pubDate>Fri, 15 Jan 2016 14:44:25 JST</pubDate>
      <author>peakbook</author>
      <guid>http://peakbook.github.io/post/20160114_Regularization/</guid>
      <description>&lt;p&gt;次の最小化問題を
&lt;a href=&#34;ihttp://julialang.org/&#34;&gt;Julia&lt;/a&gt;+&lt;a href=&#34;https://github.com/JuliaOpt/Convex.jl&#34;&gt;Convex&lt;/a&gt;+&lt;a href=&#34;https://github.com/dcjones/Gadfly.jl&#34;&gt;Gadfly&lt;/a&gt;+&lt;a href=&#34;https://github.com/JuliaLang/Interact.jl&#34;&gt;Interact&lt;/a&gt;
を使って可視化してみた．&lt;br /&gt;
$$
\begin{align}
        \text{L1正則化:} \hspace{2em}&amp;amp; \underset{\boldsymbol{w}\in\mathbb{R}^d}{\operatorname{minimize}} \hat{L}(\boldsymbol{w}) + \lambda \| \boldsymbol{w} \|_1 \\
        \text{L2正則化:} \hspace{2em}&amp;amp; \underset{\boldsymbol{w}\in\mathbb{R}^d}{\operatorname{minimize}} \hat{L}(\boldsymbol{w}) + \frac{\lambda}{2} \| \boldsymbol{w} \|_2^2\\
        \text{損失関数:} \hspace{2em}&amp;amp; \hat{L}(\boldsymbol{w}) = \frac{1}{2}\|\boldsymbol{X}\boldsymbol{w}-\boldsymbol{y}\|_2^2
\end{align}
$$
なお，行列$\boldsymbol{X}$とベクトル$\boldsymbol{y}$は以下のように設定した($d=2$)．
$$
\boldsymbol{X} =
\left[
    \begin{array}{cc}
    1 &amp;amp; 0.5 \\
    0 &amp;amp; 1
  \end{array}
\right],\;\;
\boldsymbol{y} =
\left[
    \begin{array}{c}
    1.75  \\
    0.5
  \end{array}
\right].
$$
ソースコードは&lt;a href=&#34;https://github.com/peakbook/julia_notebook/blob/master/machine_learning_with_sparsity_inducing_regularizations/L1_L2_comparison.ipynb&#34;&gt;こちら&lt;/a&gt;．&lt;/p&gt;

&lt;div style=&#34;text-align:center&#34;&gt;
&lt;video controls autoplay width=&#34;540&#34; height=&#34;400&#34; &gt;
&lt;source src=&#34;/videos/regularization.webm&#34; &gt;
&lt;/video&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Extreme Learning Machine</title>
      <link>http://peakbook.github.io/post/20151228_ELM/</link>
      <pubDate>Mon, 28 Dec 2015 22:53:13 JST</pubDate>
      <author>peakbook</author>
      <guid>http://peakbook.github.io/post/20151228_ELM/</guid>
      <description>

&lt;script type=&#34;text/javascript&#34; src=&#34;https://cdn.rawgit.com/peakbook/js-elm/v1.0/assets/d3.min.js&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;text/javascript&#34; src=&#34;https://cdn.rawgit.com/peakbook/js-elm/v1.0/assets/numeric-1.2.6.min.js&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;text/javascript&#34; src=&#34;https://cdn.rawgit.com/peakbook/js-elm/v1.0/assets/elm.js&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;text/javascript&#34; src=&#34;https://cdn.rawgit.com/peakbook/js-elm/v1.0/assets/elm_demo.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;話題のExtreme Learning Machine(ELM)，最も基本的なものをjavascriptで実装してみた．&lt;br /&gt;
ELMについてはReferencesに示した文献等が参考になる．なんか色々議論があるご様子．&lt;br /&gt;
以下，Regularized ELMによる多クラス分類のデモ．&lt;br /&gt;
ソースコードは&lt;a href=&#34;https://github.com/peakbook/js-elm&#34;&gt;こちら&lt;/a&gt;．&lt;/p&gt;

&lt;script type=&#34;text/javascript&#34;&gt;
window.onload  = function(){
    init();
    onclick_random_samples();
}
&lt;/script&gt;

&lt;p&gt;&lt;center&gt;
&lt;div id=&#34;canvas&#34;&gt;&lt;/div&gt;
&lt;br&gt;
&lt;input type=&#34;button&#34; id=&#34;button_learn&#34; value=&#34;Train&#34; onclick=&#34;onclick_train()&#34;&gt;
&lt;input type=&#34;button&#34; id=&#34;button_clear&#34; value=&#34;Clear&#34; onclick=&#34;onclick_clear_samples()&#34;&gt;
&lt;input type=&#34;button&#34; id=&#34;button_change&#34; value=&#34;Random&#34; onclick=&#34;onclick_random_samples()&#34;&gt;
&lt;form id=&#34;sampleclass&#34;&gt;
&lt;em style=&#34;color: #cc3333;&#34;&gt;■&lt;/em&gt;&lt;input type=&#34;radio&#34; name=&#34;types&#34; value=&#34;type_a&#34; checked=&#34;checked&#34; &gt;
&lt;em style=&#34;color: #33cc33;&#34;&gt;■&lt;/em&gt;&lt;input type=&#34;radio&#34; name=&#34;types&#34; value=&#34;type_b&#34; &gt;
&lt;em style=&#34;color: #3333cc;&#34;&gt;■&lt;/em&gt;&lt;input type=&#34;radio&#34; name=&#34;types&#34; value=&#34;type_c&#34; &gt;
&lt;em style=&#34;color: #b8860b;&#34;&gt;■&lt;/em&gt;&lt;input type=&#34;radio&#34; name=&#34;types&#34; value=&#34;type_d&#34; &gt;
&lt;/form&gt;
$L$&lt;input type=&#34;number&#34; id=&#34;L&#34; step=&#34;1&#34; min=&#34;1&#34; max=&#34;200&#34; value=&#34;20&#34;&gt;&lt;br&gt;
$\alpha=$&lt;em id=&#34;alpha_val&#34;&gt;&lt;/em&gt;&lt;br&gt;
&lt;input type=&#34;range&#34; id=&#34;alpha&#34; min=&#34;0&#34; max=&#34;14&#34; value=&#34;10&#34; onchange=&#34;onchange_alpha()&#34;&gt;&lt;br&gt;
Kernel&lt;select id=&#34;kernel&#34;&gt;
&lt;option value=&#34;sigmoid&#34; selected&gt;Sigmoid&lt;/option&gt;
&lt;option value=&#34;hardlimit&#34;&gt;HardLimit&lt;/option&gt;
&lt;option value=&#34;hyperbolictangent&#34;&gt;HyperbolicTangent&lt;/option&gt;
&lt;option value=&#34;multiquadric&#34;&gt;Multiquadric&lt;/option&gt;
&lt;option value=&#34;gaussian&#34;&gt;Gaussian&lt;/option&gt;
&lt;option value=&#34;cosine&#34;&gt;Cosine&lt;/option&gt;
&lt;/select&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;h1 id=&#34;toc_0&#34;&gt;References&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.sciencedirect.com/science/article/pii/S0925231206000385&#34;&gt;G.B. Huang et al., &lt;code&gt;Extreme learning machine: theory and applications,&lt;/code&gt; Neurocomputiong, 70(1), pp.489-501, 2006.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.sciencedirect.com/science/article/pii/S0893608014002214&#34;&gt;G. Huang et al., &lt;code&gt;Trends in extreme learning machines: A reveiw,&lt;/code&gt; Neural Networks, 61, pp.32-48, 2015.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.facebook.com/yann.lecun/posts/10152872571572143&#34;&gt;Yann LeCun, What&amp;rsquo;s so great about &amp;ldquo;Extreme Learning Machines&amp;rdquo;?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://elmorigin.wix.com/originofelm&#34;&gt;The Official Homepage on Origins of ELM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/MachineLearning/comments/34y2nk&#34;&gt;reddit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Phase-Locked Loop Neural Network</title>
      <link>http://peakbook.github.io/post/20150731_pllnn/</link>
      <pubDate>Fri, 31 Jul 2015 16:30:33 JST</pubDate>
      <author>peakbook</author>
      <guid>http://peakbook.github.io/post/20150731_pllnn/</guid>
      <description>

&lt;p&gt;Phase-Locked Loop(PLL) Neural Networkによる連想記憶のシミュレーション．&lt;/p&gt;

&lt;p&gt;&lt;link type=&#34;text/css&#34; rel=&#34;stylesheet&#34; href=&#34;https://cdnjs.cloudflare.com/ajax/libs/rickshaw/1.5.1/rickshaw.min.css&#34;&gt;
&lt;script type=&#34;text/javascript&#34; src=&#34;https://cdn.rawgit.com/peakbook/PLLNN/v1.0/assets/js/d3.min.js&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;text/javascript&#34; src=&#34;https://cdn.rawgit.com/peakbook/PLLNN/v1.0/assets/js/numeric-1.2.6.min.js&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;text/javascript&#34; src=&#34;https://cdn.rawgit.com/peakbook/PLLNN/v1.0/assets/js/random-0.26.js&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;text/javascript&#34; src=&#34;https://cdnjs.cloudflare.com/ajax/libs/rickshaw/1.5.1/rickshaw.min.js&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;text/javascript&#34; src=&#34;https://cdn.rawgit.com/peakbook/PLLNN/v1.0/assets/js/oscillator.js&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h1 id=&#34;toc_0&#34;&gt;Dynamics&lt;/h1&gt;

&lt;div&gt;
$$
\frac{d \theta_i}{d t}= \Omega_i + \epsilon \sum^N_{j=1}{ s_{ij} \sin (\theta_j - \theta_i) }\\
\Omega_i = \Omega_0 + \mathrm{randn}(0,\sigma_\Omega)\\
$$
&lt;/div&gt;

&lt;h1 id=&#34;toc_1&#34;&gt;Simulator&lt;/h1&gt;

&lt;div style=&#34;text-align: center; margin: 0 auto&#34;&gt;

&lt;div style=&#34;margin: 0 auto;&#34;&gt;
&lt;div style=&#34;display: inline-block;margin: 0 auto; width: 300px;&#34;&gt;
&lt;div style=&#34;display: block;&#34;&gt;
&lt;div id=&#34;pattern_r&#34; style=&#34;display: inline-block;margin: 10px 10px;height: 100px;&#34;&gt;&lt;/div&gt;
&lt;br&gt;
Initial Pattern&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div style=&#34;display: block; margin: 0 auto;&#34;&gt;
&lt;div id=&#34;pattern_0&#34; style=&#34;display: inline-block;margin: 10px 10px;height: 100px&#34;&gt;&lt;/div&gt;
&lt;div id=&#34;pattern_1&#34; style=&#34;display: inline-block;margin: 10px 10px;height: 100px&#34;&gt;&lt;/div&gt;
&lt;div id=&#34;pattern_2&#34; style=&#34;display: inline-block;margin: 10px 10px;height: 100px&#34;&gt;&lt;/div&gt;
&lt;p&gt;Memory Patterns&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div style=&#34;display: inline-block; width: 300px;&#34;&gt;
&lt;div id=&#34;viz&#34; style=&#34;margin: 10px 10px; height: 300px;&#34;&gt;&lt;/div&gt;
&lt;p&gt;Associated Pattern&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div style=&#34;margin: 0 auto;width: 500px;height: 150px;&#34;&gt;
&lt;div id=&#34;y_axis&#34; style=&#34;position: absolute; width: 30px; height: 160px;&#34;&gt;&lt;/div&gt;
&lt;div id=&#34;chart_order&#34; style=&#34;position: absolute; width: 300px; height: 150px; margin-left: 30px;&#34;&gt;&lt;/div&gt;
&lt;div id=&#34;viz_phases&#34; style=&#34;position: absolute; width: 150px; height: 150px; margin-left: 350px;&#34;&gt;&lt;/div&gt;
&lt;/div&gt;
Time Evolution of Phases
&lt;div&gt;
&lt;br&gt;
Mode:
&lt;input type=&#34;radio&#34; id=&#34;modes&#34; name=&#34;modes&#34; value=&#34;initialize&#34; checked=&#34;checked&#34; onChange=&#34;change_mode()&#34;&gt;Initialize
&lt;input type=&#34;radio&#34; name=&#34;modes&#34; value=&#34;associate&#34; onChange=&#34;change_mode()&#34;&gt;Associate
&lt;input type=&#34;button&#34; id=&#34;button_change&#34; value=&#34;Gen&#34; onclick=&#34;change_pattern()&#34; &gt;
&lt;input type=&#34;button&#34; id=&#34;button_reset&#34; value=&#34;Randomize&#34; onclick=&#34;randomize()&#34; &gt;
&lt;input type=&#34;button&#34; id=&#34;button_start&#34; value=&#34;Start&#34; onclick=&#34;start()&#34; &gt;
&lt;br&gt;
$\epsilon$: &lt;input type=&#34;number&#34; id=&#34;param_epsilon&#34; min=&#34;0&#34; max=&#34;10&#34; step=&#34;0.1&#34; value=&#34;1&#34; style=&#34;width: 100px;&#34; onChange=&#34;change_param();&#34; &gt;&amp;emsp;
$\Omega_0$: &lt;input type=&#34;number&#34; id=&#34;param_omega&#34; min=&#34;0&#34; max=&#34;5&#34; step=&#34;0.1&#34; value=&#34;1&#34; style=&#34;width: 100px;&#34; onChange=&#34;change_param();&#34; &gt;&amp;emsp;
$\sigma_\Omega$: &lt;input type=&#34;number&#34; id=&#34;param_sigma&#34; min=&#34;0&#34; max=&#34;1&#34; step=&#34;0.01&#34; value=&#34;0.01&#34; style=&#34;width: 100px;&#34; onChange=&#34;change_param(); &#34;&gt;&amp;emsp;
$N=60$
&lt;br&gt;
Learning Rule for $s_{ij} $: &amp;emsp;
&lt;input type=&#34;radio&#34; id=&#34;lmethod&#34; name=&#34;lmethod&#34; value=&#34;Hebbian&#34; checked=&#34;checked&#34; onChange=&#34;change_learning();&#34;&gt;Hebbian &amp;nbsp;
&lt;input type=&#34;radio&#34; name=&#34;lmethod&#34; value=&#34;Projection&#34; onChange=&#34;change_learning();&#34;&gt;Projection
&lt;br&gt; 
&lt;/div&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;使い方など&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Start/Stopボタン押下でシミュレーションを開始/停止します．&lt;/li&gt;
&lt;li&gt;Initializeモードで初期パターンを，Associateモードで記憶パターンを想起します．&lt;/li&gt;
&lt;li&gt;Randomizeボタン押下で位相を乱数で初期化します．&lt;/li&gt;
&lt;li&gt;Genボタン押下で初期パターンを適当に変更します．&lt;/li&gt;
&lt;li&gt;初期パターンと記憶パターンはマウスクリックで変更できます．&lt;/li&gt;
&lt;li&gt;処理が結構重いです．&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;toc_3&#34;&gt;References&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.izhikevich.org/publications/oscomp.htm&#34;&gt;Frank C. Hoppensteadt and Eugene M. Izhikevich, &amp;ldquo;&lt;em&gt;Oscillatory Neurocomputers With Dynamic Connectivity&lt;/em&gt;&amp;rdquo;,Physical Review Letters (1999), 82:2983-2986.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.izhikevich.org/publications/pllnn.htm&#34;&gt;Frank C. Hoppensteadt and Eugene M. Izhikevich, &amp;ldquo;&lt;em&gt;Pattern Recognition Via Synchronization in Phase-Locked Loop Neural Networks&lt;/em&gt;&amp;rdquo;, IEEE Transactions On Neural Networks (2000), 11:734-738.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;script type=&#34;application/javascript;version=1.7&#34; src=&#34;https://cdn.rawgit.com/peakbook/PLLNN/v1.0/assets/js/main.js&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;text/javascript&#34;&gt;
if (typeof window.fx === &#39;undefined&#39;) {
    var oldScript = document.querySelector(&#39;script[type=&#34;application/javascript;version=1.7&#34;]&#39;);
    console.log(oldScript);
    //document.body.removeChild(oldScript);
    oldScript.type=&#34;text/javascript&#34;;
    document.body.appendChild(oldScript);
}
&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>Conway&#39;s game of life on Kindle</title>
      <link>http://peakbook.github.io/post/20150629_lifegame_on_kindle/</link>
      <pubDate>Mon, 29 Jun 2015 21:57:43 JST</pubDate>
      <author>peakbook</author>
      <guid>http://peakbook.github.io/post/20150629_lifegame_on_kindle/</guid>
      <description>&lt;p&gt;Kindle 3G keyboardでライフゲーム．&lt;/p&gt;

&lt;div style=&#34;text-align:center&#34;&gt;
&lt;video controls autoplay width=&#34;540&#34; height=&#34;760&#34; &gt;
&lt;source src=&#34;/videos/kindle_life.webm&#34; &gt;
&lt;/video&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Neural Gas</title>
      <link>http://peakbook.github.io/post/20150314_ng_demo/</link>
      <pubDate>Fri, 13 Mar 2015 23:21:10 JST</pubDate>
      <author>peakbook</author>
      <guid>http://peakbook.github.io/post/20150314_ng_demo/</guid>
      <description>

&lt;p&gt;Neural Gasのデモ．&lt;/p&gt;

&lt;p&gt;&lt;script src=&#34;https://cdn.rawgit.com/peakbook/neuralnets_demo/v1.0/assets/easeljs-0.8.0.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdn.rawgit.com/peakbook/neuralnets_demo/v1.0/assets/neuralgas.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdn.rawgit.com/peakbook/neuralnets_demo/v1.0/assets/neuralgas_demo.js&#34;&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body onload=&#34;init()&#34; &gt;
&lt;center&gt;
    &lt;canvas id=&#34;Field&#34; width=&#34;400&#34; height=&#34;400&#34;&gt;&lt;/canvas&gt;
    &lt;br&gt;
    &lt;br&gt;
    &lt;form&gt;
        &lt;input type=&#34;button&#34; id=&#34;button_learn&#34; value=&#34;Start&#34; onclick=&#34;onclick_StartStop()&#34;&gt;
        &lt;input type=&#34;button&#34; id=&#34;button_change&#34; value=&#34;Change Signal&#34; onclick=&#34;ChangeSignal()&#34;&gt;
        &lt;select id=&#34;learning_mode&#34; onChange=&#34;onChange_LearningMode()&#34;&gt;
            &lt;option value=&#34;Batch&#34;&gt;Batch Learning&lt;/option&gt;
            &lt;option value=&#34;Online&#34;&gt;Online Learning&lt;/option&gt;
        &lt;/select&gt;
    &lt;/form&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;h1 id=&#34;toc_0&#34;&gt;References&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Neural_gas&#34;&gt;Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Self-Organizing Maps</title>
      <link>http://peakbook.github.io/post/20150314_som_demo/</link>
      <pubDate>Fri, 13 Mar 2015 23:21:10 JST</pubDate>
      <author>peakbook</author>
      <guid>http://peakbook.github.io/post/20150314_som_demo/</guid>
      <description>

&lt;p&gt;SOMのデモ．&lt;/p&gt;

&lt;p&gt;&lt;script src=&#34;https://cdn.rawgit.com/peakbook/neuralnets_demo/v1.0/assets/easeljs-0.8.0.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdn.rawgit.com/peakbook/neuralnets_demo/v1.0/assets/som.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdn.rawgit.com/peakbook/neuralnets_demo/v1.0/assets/som_demo.js&#34;&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body onload=&#34;init()&#34; &gt;
&lt;center&gt;
    &lt;canvas id=&#34;Field&#34; width=&#34;400&#34; height=&#34;400&#34;&gt;&lt;/canvas&gt;
    &lt;br&gt;
    &lt;br&gt;
    &lt;form&gt;
        &lt;input type=&#34;button&#34; id=&#34;button_learn&#34; value=&#34;Start&#34; onclick=&#34;onclick_StartStop()&#34;&gt;
        &lt;input type=&#34;button&#34; id=&#34;button_change&#34; value=&#34;Change Signal&#34; onclick=&#34;ChangeSignal()&#34;&gt;
        &lt;select id=&#34;learning_mode&#34; onChange=&#34;onChange_LearningMode()&#34;&gt;
            &lt;option value=&#34;Batch&#34;&gt;Batch Learning&lt;/option&gt;
            &lt;option value=&#34;Online&#34;&gt;Online Learning&lt;/option&gt;
        &lt;/select&gt;
    &lt;/form&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;緑の領域の適当な座標を入力データとして学習させている．
2次元座標を学習しているだけなので，あまり面白みはないが，
ランダムな初期状態から，徐々に緑の領域を覆っていく様子が見て取れる．&lt;/p&gt;

&lt;h1 id=&#34;toc_0&#34;&gt;References&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Self-organizing_map&#34;&gt;Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Support Vector Machine</title>
      <link>http://peakbook.github.io/post/20150226_svmdemo/</link>
      <pubDate>Thu, 26 Feb 2015 21:05:21 JST</pubDate>
      <author>peakbook</author>
      <guid>http://peakbook.github.io/post/20150226_svmdemo/</guid>
      <description>&lt;p&gt;だいぶ昔に勉強がてら作った&lt;a href=&#34;http://en.wikipedia.org/wiki/Support_vector_machine&#34;&gt;SVM&lt;/a&gt;で2クラス分類するデモを再掲．&lt;br /&gt;
SVMは自作，200行弱なのでアルゴリズムの理解にはちょうどよいかも（コードは&lt;a href=&#34;https://github.com/peakbook/js-svm&#34;&gt;こちら&lt;/a&gt;）．&lt;/p&gt;

&lt;p&gt;&lt;script src=&#34;https://cdn.rawgit.com/peakbook/js-svm/v1.0/assets/easeljs-0.4.2.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdn.rawgit.com/peakbook/js-svm/v1.0/assets/movieclip-0.4.1.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdn.rawgit.com/peakbook/js-svm/v1.0/assets/BoxBlurFilter.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdn.rawgit.com/peakbook/js-svm/v1.0/assets/svm.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdn.rawgit.com/peakbook/js-svm/v1.0/assets/TrainingSignal.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdn.rawgit.com/peakbook/js-svm/v1.0/assets/svm_sample.js&#34;&gt;&lt;/script&gt;
&lt;script&gt;
window.onload  = function(){
    init();
}
&lt;/script&gt;
&lt;center&gt;
&lt;canvas id=&#34;myCanvas&#34; width=&#34;400&#34; height=&#34;400&#34;&gt;&lt;/canvas&gt;
&lt;br&gt;&lt;br&gt;
&lt;form&gt;
&lt;input type=&#34;radio&#34; id=&#34;coord_type_a&#34; name=&#34;coord_type&#34; value=&#34;a&#34; checked onChange=&#34;pointLabel_Changed()&#34;&gt;&lt;font color=&#34;#0000FF&#34;&gt;■&lt;/font&gt;
&lt;input type=&#34;radio&#34; id=&#34;coord_type_b&#34; name=&#34;coord_type&#34; value=&#34;b&#34; onChange=&#34;pointLabel_Changed()&#34;&gt;&lt;font color=&#34;#FF0000&#34;&gt;■&lt;/font&gt;
&lt;input type=&#34;button&#34; id=&#34;button_plot&#34; value=&#34;Plot&#34; onclick=&#34;plotTestData()&#34;&gt;
&lt;input type=&#34;button&#34; id=&#34;button_learn&#34; value=&#34;Learn&#34; onclick=&#34;learning()&#34; disabled=&#34;true&#34;&gt;
&lt;input type=&#34;button&#34; id=&#34;button_clear&#34; value=&#34;Clear&#34; onclick=&#34;clearCoords()&#34;&gt;
&lt;br&gt;
Kernel&lt;select id=&#34;kernel_type&#34; onChange=&#34;kernelType_Changed()&#34;&gt;
&lt;option value=&#34;Linear&#34;&gt;Linear&lt;/option&gt;
&lt;option value=&#34;Gaussian&#34;&gt;Gaussian&lt;/option&gt;
&lt;/select&gt;
 $C$: &lt;input type=&#34;number&#34; id=&#34;param_C&#34; min=&#34;1&#34; max=&#34;0xFFFFFFFF&#34; step=&#34;1&#34; value=&#34;2000&#34; onChange=&#34;paramC_Changed()&#34;&gt;
 $\gamma$: &lt;input type=&#34;number&#34; id=&#34;param_gamma&#34; min=&#34;1&#34; max=&#34;200&#34; step=&#34;1&#34; value=&#34;25&#34; onChange=&#34;paramGamma_Changed()&#34;&gt;
&lt;/form&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;つかいかた&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;枠内をクリックして適当に点を打つ （面倒な場合はPlotを押下）&lt;/li&gt;
&lt;li&gt;Learnを押す&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;カーネル関数として，ガウシアンカーネルと線形カーネルが選べます．
線形カーネルを設定した場合は，分離平面を描画しているので，マージン最大化の様子がご覧いただけます．&lt;br /&gt;
ちなみに濃い色の点は選ばれしサポートベクタです．&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Interact.jlを使ってみる</title>
      <link>http://peakbook.github.io/post/20150225_interactjl/</link>
      <pubDate>Wed, 25 Feb 2015 11:43:17 JST</pubDate>
      <author>peakbook</author>
      <guid>http://peakbook.github.io/post/20150225_interactjl/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/JuliaLang/Interact.jl&#34;&gt;Interact.jl&lt;/a&gt;を使って，
多項式曲線フィッティングをインタラクティブにしてみた．&lt;/p&gt;

&lt;div style=&#34;text-align:center&#34;&gt;
&lt;img src=/images/fitting.gif&gt;
&lt;/div&gt;

&lt;p&gt;Gadflyと組み合わせると，グラフがグリグリ動いてとても楽しい．&lt;br /&gt;
見た目もわかりやすくて，非常に良いですね．&lt;/p&gt;

&lt;p&gt;例では，多項式の次数を$M$，L2正則化の係数を$\lambda=e^{-\lambda_p}$としてます．&lt;br /&gt;
コードは&lt;a href=&#34;http://nbviewer.ipython.org/github/peakbook/julia_notebook/blob/master/interact/fitting.ipynb&#34;&gt;こちら&lt;/a&gt;．
nbviewerではもちろんインタラクティブにはならないので悪しからず．&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>HugoでGithubPages</title>
      <link>http://peakbook.github.io/post/first/</link>
      <pubDate>Sun, 08 Feb 2015 18:52:09 JST</pubDate>
      <author>peakbook</author>
      <guid>http://peakbook.github.io/post/first/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://gohugo.io/&#34;&gt;HUGO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gizak/nofancy&#34;&gt;https://github.com/gizak/nofancy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>